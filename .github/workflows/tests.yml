name: tests

on: [ push ]

jobs:
  tests:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ 3.8, 3.9 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Restore cached dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}
          restore-keys: ${{ runner.os }}-pip-${{ matrix.python-version }}-
      - name: Install wheel
        run: pip install wheel
      - name: Install dependencies on Linux
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo apt install -y libproj-dev proj-data proj-bin
          sudo apt install -y libgeos-dev
      - name: Run `setup.py`
        run: |
          pip install pint
          python setup.py install
      - name: Install dependencies
        run: |
          pip install -e .[testing,development]
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run tests with coverage
        run: pytest --cov=ensembleperturbation --numprocesses auto
      - name: Upload coverage to Codecov
        if: matrix.python-version == 3.9
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: python${{ matrix.python-version }}-${{ runner.os }}
          fail_ci_if_error: true
